{
  "name": "vscode-voice-doc-plugin",
  "displayName": "Voice Documentation Plugin",
  "description": "AI-powered voice documentation for code using ChatGPT and Claude with Speech-to-Text",
  "version": "1.0.0",
  "publisher": "azad-ahmed",
  "author": {
    "name": "Azad Ahmed",
    "email": "azad.ahmed@example.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/azad-ahmed/vscode-voice-doc-plugin.git"
  },
  "homepage": "https://github.com/azad-ahmed/vscode-voice-doc-plugin#readme",
  "bugs": {
    "url": "https://github.com/azad-ahmed/vscode-voice-doc-plugin/issues"
  },
  "engines": {
    "vscode": "^1.70.0",
    "node": ">=16.0.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Documentation",
    "AI",
    "Productivity"
  ],
  "keywords": [
    "voice",
    "documentation",
    "ai",
    "chatgpt",
    "claude",
    "speech-to-text",
    "comments",
    "azure",
    "openai",
    "anthropic",
    "code-documentation",
    "voice-recognition"
  ],
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "voiceDoc.startRecording",
        "title": "Start Voice Recording",
        "category": "Voice Doc",
        "icon": "$(record)"
      },
      {
        "command": "voiceDoc.stopRecording",
        "title": "Stop Voice Recording",
        "category": "Voice Doc",
        "icon": "$(debug-stop)"
      },
      {
        "command": "voiceDoc.configureApi",
        "title": "Configure AI APIs",
        "category": "Voice Doc",
        "icon": "$(settings-gear)"
      },
      {
        "command": "voiceDoc.testConnection",
        "title": "Test AI Connection",
        "category": "Voice Doc",
        "icon": "$(plug)"
      },
      {
        "command": "voiceDoc.showHistory",
        "title": "Show Voice Documentation History",
        "category": "Voice Doc",
        "icon": "$(history)"
      },
      {
        "command": "voiceDoc.clearHistory",
        "title": "Clear Voice Documentation History",
        "category": "Voice Doc",
        "icon": "$(clear-all)"
      },
      {
        "command": "voiceDoc.exportSettings",
        "title": "Export Settings",
        "category": "Voice Doc",
        "icon": "$(export)"
      },
      {
        "command": "voiceDoc.importSettings",
        "title": "Import Settings",
        "category": "Voice Doc",
        "icon": "$(import)"
      }
    ],
    "keybindings": [
      {
        "command": "voiceDoc.startRecording",
        "key": "ctrl+shift+v",
        "mac": "cmd+shift+v",
        "when": "editorTextFocus"
      },
      {
        "command": "voiceDoc.stopRecording",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "when": "voiceDoc.isRecording"
      },
      {
        "command": "voiceDoc.configureApi",
        "key": "ctrl+shift+alt+v",
        "mac": "cmd+shift+alt+v"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorTextFocus",
          "command": "voiceDoc.startRecording",
          "group": "voice-doc@1"
        },
        {
          "when": "voiceDoc.isRecording",
          "command": "voiceDoc.stopRecording",
          "group": "voice-doc@2"
        }
      ],
      "editor/title": [
        {
          "when": "editorTextFocus",
          "command": "voiceDoc.startRecording",
          "group": "navigation@1"
        }
      ],
      "commandPalette": [
        {
          "command": "voiceDoc.startRecording",
          "when": "editorTextFocus"
        },
        {
          "command": "voiceDoc.stopRecording",
          "when": "voiceDoc.isRecording"
        }
      ],
      "view/title": [
        {
          "command": "voiceDoc.clearHistory",
          "when": "view == voiceDocHistory",
          "group": "navigation"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "voiceDocHistory",
          "name": "Voice Documentation History",
          "when": "voiceDoc.hasHistory"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "voiceDocHistory",
        "contents": "No voice documentation history yet.\n[Start Recording](command:voiceDoc.startRecording)"
      }
    ],
    "configuration": {
      "title": "Voice Documentation",
      "properties": {
        "voiceDoc.general.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable Voice Documentation plugin",
          "order": 0
        },
        "voiceDoc.openai.apiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API Key for ChatGPT integration (stored securely)",
          "scope": "application",
          "order": 1
        },
        "voiceDoc.anthropic.apiKey": {
          "type": "string",
          "default": "",
          "description": "Anthropic API Key for Claude integration (stored securely)",
          "scope": "application",
          "order": 2
        },
        "voiceDoc.azure.apiKey": {
          "type": "string",
          "default": "",
          "description": "Azure Speech Services API Key",
          "scope": "application",
          "order": 3
        },
        "voiceDoc.azure.region": {
          "type": "string",
          "default": "westeurope",
          "description": "Azure Speech Services region",
          "scope": "application",
          "order": 4
        },
        "voiceDoc.aiProvider": {
          "type": "string",
          "enum": [
            "local",
            "openai",
            "anthropic"
          ],
          "default": "local",
          "description": "Choose AI provider for comment enhancement",
          "enumDescriptions": [
            "Use local text processing only",
            "Use OpenAI ChatGPT for enhanced comments",
            "Use Anthropic Claude for enhanced comments"
          ],
          "order": 5
        },
        "voiceDoc.speechProvider": {
          "type": "string",
          "enum": [
            "browser",
            "azure"
          ],
          "default": "browser",
          "description": "Choose Speech-to-Text provider",
          "enumDescriptions": [
            "Use browser's built-in speech recognition",
            "Use Azure Speech Services (requires API key)"
          ],
          "order": 6
        },
        "voiceDoc.openai.model": {
          "type": "string",
          "enum": [
            "gpt-4",
            "gpt-4-turbo",
            "gpt-4-turbo-preview",
            "gpt-3.5-turbo",
            "gpt-3.5-turbo-16k"
          ],
          "default": "gpt-3.5-turbo",
          "description": "OpenAI model to use",
          "order": 7
        },
        "voiceDoc.anthropic.model": {
          "type": "string",
          "enum": [
            "claude-3-sonnet-20240229",
            "claude-3-haiku-20240307",
            "claude-3-opus-20240229"
          ],
          "default": "claude-3-haiku-20240307",
          "description": "Anthropic Claude model to use",
          "order": 8
        },
        "voiceDoc.language": {
          "type": "string",
          "enum": [
            "auto",
            "de-DE",
            "en-US",
            "fr-FR",
            "es-ES",
            "it-IT"
          ],
          "default": "auto",
          "description": "Speech recognition language",
          "order": 9
        },
        "voiceDoc.commentStyle": {
          "type": "string",
          "enum": [
            "inline",
            "block",
            "docstring"
          ],
          "default": "inline",
          "description": "Preferred comment style",
          "enumDescriptions": [
            "Single line comments (//)",
            "Multi-line block comments (/* */)",
            "Documentation comments (/** */)"
          ],
          "order": 10
        },
        "voiceDoc.autoFormat": {
          "type": "boolean",
          "default": true,
          "description": "Automatically format generated comments",
          "order": 11
        },
        "voiceDoc.showPreview": {
          "type": "boolean",
          "default": true,
          "description": "Show preview before inserting comments",
          "order": 12
        },
        "voiceDoc.recordingTimeout": {
          "type": "number",
          "default": 30,
          "minimum": 5,
          "maximum": 300,
          "description": "Maximum recording time in seconds",
          "order": 13
        },
        "voiceDoc.confidenceThreshold": {
          "type": "number",
          "default": 0.7,
          "minimum": 0.1,
          "maximum": 1.0,
          "description": "Minimum confidence threshold for speech recognition",
          "order": 14
        },
        "voiceDoc.enableHistory": {
          "type": "boolean",
          "default": true,
          "description": "Keep history of generated voice documentation",
          "order": 15
        },
        "voiceDoc.maxHistoryItems": {
          "type": "number",
          "default": 100,
          "minimum": 10,
          "maximum": 1000,
          "description": "Maximum number of history items to keep",
          "order": 16
        },
        "voiceDoc.enableTelemetry": {
          "type": "boolean",
          "default": false,
          "description": "Enable anonymous telemetry data collection",
          "order": 17
        },
        "voiceDoc.debug": {
          "type": "boolean",
          "default": false,
          "description": "Enable debug logging",
          "order": 18
        }
      }
    },
    "configurationDefaults": {
      "files.associations": {
        "*.voice-doc": "json"
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run lint",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish",
    "deploy": "npm run package",
    "clean": "rimraf out",
    "prebuild": "npm run clean",
    "build": "npm run compile"
  },
  "dependencies": {
    "node-fetch": "^2.6.12",
    "axios": "^1.6.0",
    "ws": "^8.14.2"
  },
  "devDependencies": {
    "@types/vscode": "^1.70.0",
    "@types/node": "18.x",
    "@types/node-fetch": "^2.6.4",
    "@types/ws": "^8.5.8",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "@vscode/test-electron": "^2.3.4",
    "eslint": "^8.50.0",
    "rimraf": "^5.0.5",
    "typescript": "^5.2.2",
    "@vscode/vsce": "^2.21.1"
  },
  "extensionDependencies": [],
  "extensionPack": [],
  "badges": [
    {
      "url": "https://img.shields.io/badge/AI-Powered-blue",
      "href": "https://github.com/azad-ahmed/vscode-voice-doc-plugin",
      "description": "AI-Powered Documentation"
    }
  ],
  "qna": "https://github.com/azad-ahmed/vscode-voice-doc-plugin/discussions",
  "sponsor": {
    "url": "https://github.com/sponsors/azad-ahmed"
  }
}